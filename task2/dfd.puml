@startuml
!define C4P https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master
!include C4P/C4_Container.puml
LAYOUT_WITH_LEGEND()

title Data Mesh DFD — Будущее 2.0, домены и платформа

System_Boundary(domains, "Бизнес-домены (DDD)") {
  Container(patients, "Patients", "DDD Core", "Персональные данные, контакты (PII)")
  Container(medical, "Medical", "DDD Core", "Медкарты, врачи, назначения")
  Container(fintech, "Fintech", "DDD Core", "Счета, кредиты, платежи")
  Container(logistics, "Logistics", "DDD Core", "Поставки, инвентарь, фарма")
}

System_Boundary(platform, "Data Mesh Platform") {
  Container(kafka, "Kafka\nEvent Hub", "Apache Kafka", "Event-driven")
  Container(airflow, "Airflow\nOrchestrator", "Apache Airflow", "Оркестрация ETL/ELT пайплайнов")
  Container(iceberg, "Iceberg\nData Lakehouse", "Apache Iceberg\n(on S3)", "ACID-таблицы аналитики")
  Container(nessie, "Nessie\nVersion Control", "Project Nessie")
  Container(datahub, "DataHub\nMetadata Catalog", "DataHub", "Метаданные, lineage, RBAC")
  Container(trino, "Trino\nQuery Engine", "Trino", "SQL к Iceberg/Kafka")
  Container(superset, "Superset\nBI Portal", "Apache Superset", "Панели и отчёты")
  Container(apiGw, "API Gateway", "Kong + Keycloak", "API-контроль и аутентификация")
}

' Потоки из доменов в платформу
Rel(patients, kafka, "PatientEvents", "Avro/JSON")
Rel(medical, kafka, "MedicalAggregates", "Avro")
Rel(fintech, kafka, "FinanceMetrics", "Avro")
Rel(logistics, kafka, "LogisticsEvents", "JSON")

Rel(kafka, airflow, "Trigger ETL jobs", "Consumer")
Rel(airflow, iceberg, "Write transformed tables", "Parquet")
Rel(iceberg, nessie, "Versioned tables", "Metadata commits")
Rel(airflow, datahub, "Register pipelines & schemas", "Metadata API")

' Метаданные и каталог
Rel(datahub, trino, "Provide schemas & policies", "REST API")

' Запросы BI & доменов
Rel(superset, trino, "SQL queries", "JDBC")

' API-доступ к доменам
Rel(apiGw, patients, "REST/gRPC calls\n(patient profile)")
Rel(apiGw, medical, "REST/gRPC calls\n(medical records)")
Rel(apiGw, fintech, "REST/gRPC calls\n(financial services)")
Rel(apiGw, logistics, "REST/gRPC calls\n(logistics services)")

' Аналитический SQL-слой
Rel(trino, iceberg, "Read analytical tables", "Iceberg tables")
Rel(trino, kafka, "Read real-time streams", "Kafka topics")

@enduml